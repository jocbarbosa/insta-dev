{"ast":null,"code":"var _jsxFileName = \"/home/joao/codenation/react-16/src/routes/ProfileRoute/ProfileRoute.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport UserProfile from '../../containers/UserProfile';\nimport UserPosts from '../../containers/UserPosts';\nimport Loading from '../../components/Loading';\n\nconst ProfileRoute = () => {\n  const [name, setName] = useState('');\n  const [id, setUserId] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [userPosts, setUserPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const {\n      pathname\n    } = window.location;\n    const param = pathname.split(\"/\")[2];\n    fetch(`https://5e7d0266a917d70016684219.mockapi.io/api/v1/users?search=${param}`).then(response => response.json()).then(profileData => {\n      setAvatar(profileData[0].avatar);\n      setEmail(profileData[0].email);\n      setName(profileData[0].name);\n      setUsername(profileData[0].username);\n      setUserId(profileData[0].id);\n    });\n  }, []);\n  useEffect(() => {\n    if (id) {\n      fetch(`https://5e7d0266a917d70016684219.mockapi.io/api/v1/users/${id}/posts`).then(response => response.json()).then(posts => {\n        setUserPosts(posts);\n        setIsLoading(false);\n      });\n    }\n  }, [id]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"profile-route\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UserProfile, {\n    name: name,\n    avatar: avatar,\n    username: username,\n    email: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), isLoading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }\n  }) : /*#__PURE__*/React.createElement(UserPosts, {\n    posts: userPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }));\n};\n\nexport default ProfileRoute;","map":{"version":3,"sources":["/home/joao/codenation/react-16/src/routes/ProfileRoute/ProfileRoute.jsx"],"names":["React","useState","useEffect","UserProfile","UserPosts","Loading","ProfileRoute","name","setName","id","setUserId","avatar","setAvatar","username","setUsername","email","setEmail","userPosts","setUserPosts","isLoading","setIsLoading","pathname","window","location","param","split","fetch","then","response","json","profileData","posts"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,EAAD,EAAKC,SAAL,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CACP,MAAM;AACN,UAAM;AAAEmB,MAAAA;AAAF,QAAeC,MAAM,CAACC,QAA5B;AACA,UAAMC,KAAK,GAAGH,QAAQ,CAACI,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAd;AAEAC,IAAAA,KAAK,CAAE,mEAAkEF,KAAM,EAA1E,CAAL,CACGG,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,WAAW,IAAI;AACnBlB,MAAAA,SAAS,CAACkB,WAAW,CAAC,CAAD,CAAX,CAAenB,MAAhB,CAAT;AACAK,MAAAA,QAAQ,CAACc,WAAW,CAAC,CAAD,CAAX,CAAef,KAAhB,CAAR;AACAP,MAAAA,OAAO,CAACsB,WAAW,CAAC,CAAD,CAAX,CAAevB,IAAhB,CAAP;AACAO,MAAAA,WAAW,CAACgB,WAAW,CAAC,CAAD,CAAX,CAAejB,QAAhB,CAAX;AACAH,MAAAA,SAAS,CAACoB,WAAW,CAAC,CAAD,CAAX,CAAerB,EAAhB,CAAT;AACD,KARH;AASD,GAdQ,EAcN,EAdM,CAAT;AAgBAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,EAAJ,EAAQ;AACNiB,MAAAA,KAAK,CAAE,4DAA2DjB,EAAG,QAAhE,CAAL,CACGkB,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQI,KAAK,IAAI;AACbb,QAAAA,YAAY,CAACa,KAAD,CAAZ;AACAX,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OALH;AAMD;AACF,GATQ,EASN,CAACX,EAAD,CATM,CAAT;AAWA,sBACE;AAAK,mBAAY,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAEF,IADR;AAEE,IAAA,MAAM,EAAEI,MAFV;AAGE,IAAA,QAAQ,EAAEE,QAHZ;AAIE,IAAA,KAAK,EAAEE,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQGI,SAAS,gBACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,gBAEN,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEF,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVN,CADF;AAeD,CAnDD;;AAqDA,eAAeX,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport UserProfile from '../../containers/UserProfile';\nimport UserPosts from '../../containers/UserPosts';\n\nimport Loading from '../../components/Loading';\n\nconst ProfileRoute = () => {\n  const [name, setName] = useState('');\n  const [id, setUserId] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [userPosts, setUserPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(\n    () => {\n    const { pathname } = window.location;\n    const param = pathname.split(\"/\")[2];\n\n    fetch(`https://5e7d0266a917d70016684219.mockapi.io/api/v1/users?search=${param}`)\n      .then(response => response.json())\n      .then(profileData => {\n        setAvatar(profileData[0].avatar);\n        setEmail(profileData[0].email);\n        setName(profileData[0].name);\n        setUsername(profileData[0].username);\n        setUserId(profileData[0].id);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (id) {\n      fetch(`https://5e7d0266a917d70016684219.mockapi.io/api/v1/users/${id}/posts`)\n        .then(response => response.json())\n        .then(posts => {\n          setUserPosts(posts);\n          setIsLoading(false)\n        });\n    }\n  }, [id]);\n\n  return (\n    <div data-testid=\"profile-route\">\n      <UserProfile\n        name={name}\n        avatar={avatar}\n        username={username}\n        email={email}\n      />\n\n      {isLoading\n        ? (<Loading />)\n        : <UserPosts posts={userPosts} />\n      }\n    </div>\n  );\n};\n\nexport default ProfileRoute;\n"]},"metadata":{},"sourceType":"module"}